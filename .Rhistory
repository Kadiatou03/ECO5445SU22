library(gvlma)
Fit_property1 <- lm(price^-1 ~ bed + bath + area_heated + dist_cbd, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^2 ~ bed + bath + area_heated + dist_cbd, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^-2 ~ bed + bath + area_heated + dist_cbd, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
bc= boxcox(Property)
bc= boxcox(price ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
best.lam = bc$x[which(bc$y==max(bc$y))]
best.lam = bc$x[which(bc$y==max(bc$y))]
best.lam = bc$x[which(bc$y==max(bc$y))]
best.lam = bc$x[which(bc$y==max(bc$y))]
View(bc)
library(gvlma)
Fit_property1 <- lm(price^0.1010101 ~ bed + bath + area_heated + dist_cbd, data = Property)
bc= boxcox(price ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
best.lam = bc$x[which(bc$y==max(bc$y))]
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(log(price) ~ bed + bath + area_heated + dist_cbd, data = Property)
bc= boxcox(price ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
best.lam = bc$x[which(bc$y==max(bc$y))]
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
powerTransform(Property$price)
summary(powerTransform(Property$price, family = "bcPower"))
library(gvlma)
Fit_property1 <- lm(log(price) ~ bed + bath + area_heated + dist_cbd, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^-0.33  ~ bed + bath + area_heated + dist_cbd, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^0.1  ~ bed + bath + area_heated + dist_cbd, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
plot(Fit_property1)
library(gvlma)
Fit_property1 <- lm(price^0  ~ bed + bath + area_heated + dist_cbd, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^0.5  ~ bed + bath + area_heated + dist_cbd, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^0.2  ~ bed + bath + area_heated + dist_cbd, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
boxTidwell(price ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
boxTidwell(price ~ bed + bath + area_heated + dist_cbd, data = Property)
boxTidwell(price ~ bed + bath , data = Property)
library(gvlma)
Fit_property1 <- lm(price/area_heated ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^0.1 ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(price^0.1 ~ bed^0.1 + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
library(gvlma)
Fit_property1 <- lm(price^0.1 ~ bed^2 + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
bc= boxcox(price ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
library(gvlma)
Fit_property1 <- lm(price^0 ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
summary(powerTransform(Property$price, family = "bcPower"))
library(gvlma)
Fit_property1 <- lm(price^0 ~ bed + bath + area_heated + dist_cbd + dist_lakes^0.1 + pool, data = Property)
library(gvlma)
Fit_property1 <- lm(price^0.1 ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(ln(price) ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
install.packages('SciViews')
library(SciViews)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(ln(price) ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
Property$logprice =log(Property$price)
View(Property)
View(Property)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ bed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
gvmodelProperty <- gvlma(Fit_property)
summary(gvmodelProperty)
Property$logbed = log(Property$bed)
View(Property)
View(Property)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ logbed + bath + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
View(Property)
Property$logprice =log(Property$price)
Property$logDist_cbd = log(Property$dist_cbd)
Property$logArea_heated = log(Property$area_heated)
Property$logDist_lakes = log(Property$dist_lakes)
View(Property)
View(Property)
Fit_property1 <- lm(logprice ~ bed + bath + logArea_heated + logDist_cbd + logDist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ logbed + bath + logArea_heated + logDist_cbd + logDist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(readr)
library(dplyr)
library(car)
Property <- read.csv("data/prop_prices_reduced.csv")
#Renaming column sale_def with an intuitive name: price
library(dplyr)
Property <- rename(Property, price = sale_def)
# Basis summary statistics
summary(Property)
# Correlation between all the quantitative variables
cor(Property)
Fit_property <- lm(price ~ bed + bath + area_heated + area + dist_cbd + dist_lakes + pool, data = Property)
summary(Fit_property)
library(gvlma)
Fit_property <- lm(price ~ bed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
par(ask = TRUE)
par(mfrow = c(2, 2))
plot(Fit_property)
knitr::opts_chunk$set(echo = TRUE)
Fit_property <- lm(price ~ bed + bath + area_heated + area + dist_cbd + dist_lakes + pool, data = Property)
summary(Fit_property)
library(gvlma)
gvmodelProperty <- gvlma(Fit_property)
summary(gvmodelProperty)
par(mfrow = c(2, 2))
plot(Fit_property)
Property$logprice =log(Property$price)
Fit_property1 <- lm(logprice ~ bed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
View(Property)
View(Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
Property$logDist_cbd = log(Property$dist_cbd)
Property$logDist_lakes = log(Property$dist_lakes)
Fit_property1 <- lm(logprice ~ bed + bath + area + area_heated +logDist_cbd + logDist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
Property$logArea_heated = log(Property$area_heated)
Fit_property1 <- lm(logprice ~ bed + bath + area + logArea_heated +logDist_cbd + logDist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
Fit_property1 <- lm(logprice ~ bed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
# testing for outliers
outlierTest(Fit_Property1)
# testing for outliers
library(car)
outlierTest(Fit_Property1)
library(car)
outlierTest(Fit_property1)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
opar <- par(no.readonly = TRUE)
library(car)
outlierTest(fit)
fit <- lm(Murder ~ Population + Illiteracy + Income +Frost, data = states)
states <- as.data.frame(state.x77[, c("Murder", "Population",
"Illiteracy", "Income", "Frost")])
fit <- lm(Murder ~ Population + Illiteracy + Income +Frost, data = states)
# If you want to include all variables, the shorthand is
fit <- lm(Murder ~., data = states)
summary(fit)
library(car)
outlierTest(fit)
# testing for outliers
library(car)
outlierTest(Fit_property1)
Property$logbed = log(Property$bed)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ logbed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
plot(Fit_property1)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
attach(Property)
par(mfrow = c(2, 4))
hist(price)
hist(bed)
hist(bath)
hist(area_heated)
hist(area)
hist(dist_cbd)
hist(dist_lakes)
hist(pool)
hist(logprice)
Property$areaRoot = sqrt(Property$area)
View(Property)
hist(areaRoot)
View(Property)
View(Property)
Fit_property1 <- lm(logprice ~ logbed + bath + areaRoot + area_heated + dist_cbd + dist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
hist(areaRoot)
hist(logprice)
hist(areaRoot)
Property$areanew = sqrt(Property$area)
hist(areanew)
Property$areanew <- sqrt(Property$area)
hist(areanew)
hist(areanew)
knitr::opts_chunk$set(echo = TRUE)
Property$logprice =log(Property$price)
View(Property)
View(Property)
Property$sqrtarea =sqrt(Property$area)
hist(sqrtarea)
attach(Property)
hist(sqrtarea)
Property$logarea= log(Propertyarea)
Property$logarea= log(Property$area)
attach(Property)
hist(logarea)
hist(sqrtarea)
attach(Property)
hist(logarea)
hist(sqrtarea)
Property$logDist_lakes = log(Property$dist_lakes)
hist(logDist_lakes)
attach(Property)
hist(logarea)
hist(logDist_lakes)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ logbed + bath + logarea + area_heated + logDist_cbd + dist_lakes + pool, data = Property)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + logDist_cbd + dist_lakes + pool, data = Property)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
hist(price)
hist(logprice)
View(Property)
head(Property)
Property$pool <- factor(Property$pool)
Fit_property <- lm(price ~ bed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
gvmodelProperty <- gvlma(Fit_property)
summary(gvmodelProperty)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
View(Fit_property)
View(Property)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
opar <- par(no.readonly = TRUE)
library(gvlma)
fit <- lm(Murder ~ Population + Illiteracy + Income +
Frost, data = states)
# Basis summary statistics
summary(Property)
# Correlation between all the quantitative variables
cor(Property)
# Correlation between all the quantitative variables
PropertyQuant <- select(Property, bed, bath, area_heated, area, dist_cbd, dist_lakes )
# Correlation between all the quantitative variables
library(dplyr)
PropertyQuant <- select(Property, bed, bath, area_heated, area, dist_cbd, dist_lakes )
View(PropertyQuant)
PropertyQuant <- select(Property, price, bed, bath, area_heated, area, dist_cbd, dist_lakes)
cor(PropertyQuant)
scatterplotMatrix(PropertyQuant, main = "Scatterplots")
library(car)
scatterplotMatrix(PropertyQuant, main = "Scatterplots")
# or
pairs(~price + bed + bath + area_heated + dist_cbd + dist_lakes, data = Property, main = "Scatterplots")
pairs(~price + bed + bath + area_heated + dist_cbd + dist_lakes, data = Property, main = "Quantitative Variables Scatterplots")
PropertyQuant <- select(Property, price, bed, bath, area_heated, area, dist_cbd, dist_lakes, main = "Scatterplots")
PropertyQuant <- select(Property, price, bed, bath, area_heated, area, dist_cbd, dist_lakes)
PropertyQuant <- select(Property, price, bed, bath, area_heated, area, dist_cbd, dist_lakes)
scatterplotMatrix(PropertyQuant, main = "Quantitative Variables Scatterplots")
Fit_property <- lm(price ~ bed + bath + area_heated + area + dist_cbd + dist_lakes + pool, data = Property)
summary(Fit_property)
library(gvlma)
Fit_property <- lm(price ~ bed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
par(mfrow = c(2, 2))
plot(Fit_property)
# Test of linear model assumptions
gvmodelProperty <- gvlma(Fit_property)
summary(gvmodelProperty)
# All the Gauss-Markov assumptions (Global Stat, Skewness, Kurtosis, Link Function, Heteroscedasticity) are violated
# For Global Stat,
# for Skewness,
# For Kurtosis
# For link Function,
# For Heteroscedasticity. we will use the Box-Cox transformation to apply log() to the dependent variable price
library(car)
Property$logprice =log(Property$price)
Property$logarea= log(Property$area)
Property$logDist_lakes = log(Property$dist_lakes)
attach(Property)
hist(logprice)
hist(logarea)
hist(logDist_lakes)
library(gvlma)
library(SciViews)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,
"pool" = 0)
predict(Fit_property, newproperty)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490)
predict(Fit_property, newproperty)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490
"pool" = 0)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,
"pool" = 0)
predict(Fit_property, newproperty)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,
pool =factor(c("0","1")))
predict(Fit_property, newproperty)
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
oj <- read.csv("oj.csv")
head(oj)
oj$brand <- factor(oj$brand)
newdata <- data.frame(price=rep(4,3),
brand=factor(c("tropicana","minute.maid","dominicks"),
levels=levels(oj$brand)))
predict(reg, newdata=newdata)  ## predicted log units moved
reg = glm(log(sales) ~ log(price) + brand, data=oj)
summary(reg) ## coef, tests, fit
coef(reg) ## just coefficients
newdata <- data.frame(price=rep(4,3),
brand=factor(c("tropicana","minute.maid","dominicks"),
levels=levels(oj$brand)))
predict(reg, newdata=newdata)  ## predicted log units moved
exp(predict(reg, newdata=newdata)) ## predicted # of units moved
View(oj)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,
pool =factor(c("0")))
predict(Fit_property, newproperty)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + area + area_heated + dist_cbd + logDist_lakes, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
Property$logarea= log(Property$area)
Property$logDist_lakes = log(Property$dist_lakes)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + logDist_cbd + logDist_lakes, data = Property)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + area + area_heated + dist_cbd + dist_lakes, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + area + area_heated + dist_cbd + dist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
par(mfrow = c(2, 2))
plot(Fit_property)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + bath + logarea + area_heated + dist_cbd + logDist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
hist(price)
hist(bed)
hist(bath)
hist(area_heated)
hist(area)
hist(dist_cbd)
hist(dist_lakes)
hist(pool)
knitr::opts_chunk$set(echo = TRUE)
# Histograms for all variables
attach(Property)
par(mfrow = c(2, 4))
hist(price)
hist(bed)
hist(bath)
hist(area_heated)
hist(area)
hist(dist_cbd)
hist(dist_lakes)
hist(pool)
# Scatterplots for the relationships between all quantitative variables
library(dplyr)
PropertyQuant <- select(Property, price, bed, bath, area_heated, area, dist_cbd, dist_lakes)
library(car)
scatterplotMatrix(PropertyQuant, main = "Quantitative Variables Scatterplots")
# or
pairs(~price + bed + bath + area_heated + dist_cbd + dist_lakes, data = Property, main = "Quantitative Variables Scatterplots")
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,
"pool" = 0)
# pool =factor(c("0")))
predict(Fit_property, newproperty)
newproperty <- data.frame("bed"= 2,
"bath" = 2,
"area_heated" = 1223,
"area" = 9750,
"dist_cbd" = 19368,
"dist_lakes" = 490,
pool =factor(c("0")))
predict(Fit_property, newproperty)
View(Property)
View(Property)
Property$logprice =log(Property$price)
Property$logarea= log(Property$area)
Property$logbath= log(Property$bath)
Property$logDist_lakes = log(Property$dist_lakes)
library(gvlma)
Fit_property1 <- lm(logprice ~ bed + logbath + logarea + area_heated + dist_cbd + logDist_lakes + pool, data = Property)
gvmodelProperty1 <- gvlma(Fit_property1)
summary(gvmodelProperty1)
# testing for outliers
library(car)
outlierTest(Fit_property1)
# Factor in  data: Pool
head(Property)
Property$pool <- factor(Property$pool)
# Basis summary statistics
summary(Property)
# Correlation between all the quantitative variables
cor(PropertyQuant)
